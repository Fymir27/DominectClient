// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/netcode.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DominectClient {

  /// <summary>Holder for reflection information generated from proto/netcode.proto</summary>
  public static partial class NetcodeReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/netcode.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetcodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNwcm90by9uZXRjb2RlLnByb3RvEgduZXRjb2RlGhRwcm90by9kb21pbmVj",
            "dC5wcm90byIxCgpBdXRoUGFja2V0EhMKC21hdHJfbnVtYmVyGAEgASgJEg4K",
            "BnNlY3JldBgCIAEoCSI4Cg1NYXRjaElEUGFja2V0EhIKCnVzZXJfdG9rZW4Y",
            "ASABKAkSEwoLbWF0Y2hfdG9rZW4YAiABKAkiLQoSR2V0VGltZW91dFJlc3Bv",
            "bnNlEhcKD3RpbWVvdXRfc2Vjb25kcxgBIAEoDSJLChNTZXRQc2V1ZG9ueW1S",
            "ZXF1ZXN0EiEKBGF1dGgYASABKAsyEy5uZXRjb2RlLkF1dGhQYWNrZXQSEQoJ",
            "cHNldWRvbnltGAIgASgJIsUBChRTZXRQc2V1ZG9ueW1SZXNwb25zZRI7Cgpl",
            "cnJvcl9jb2RlGAEgASgOMicubmV0Y29kZS5TZXRQc2V1ZG9ueW1SZXNwb25z",
            "ZS5FcnJvckNvZGUicAoJRXJyb3JDb2RlEhMKD1VOREVGSU5FRF9FUlJPUhAA",
            "EgYKAk9LEAESFAoQUkVRVUVTVF9SRUpFQ1RFRBACEhAKDEFMUkVBRFlfVVNF",
            "RBADEgwKCFRPT19MT05HEAQSEAoMRU1QVFlfRklFTERTEAUiKgoUR2V0VXNl",
            "clRva2VuUmVzcG9uc2USEgoKdXNlcl90b2tlbhgBIAEoCSJfChdVc2VyUmVn",
            "aXN0cmF0aW9uUmVxdWVzdBIQCghmdWxsbmFtZRgBIAEoCRINCgVlbWFpbBgC",
            "IAEoCRITCgttYXRyX251bWJlchgDIAEoCRIOCgZzZWNyZXQYBCABKAkivwEK",
            "GFVzZXJSZWdpc3RyYXRpb25SZXNwb25zZRI/CgplcnJvcl9jb2RlGAEgASgO",
            "MisubmV0Y29kZS5Vc2VyUmVnaXN0cmF0aW9uUmVzcG9uc2UuRXJyb3JDb2Rl",
            "ImIKCUVycm9yQ29kZRITCg9VTkRFRklORURfRVJST1IQABIGCgJPSxABEhUK",
            "EUlOVkFMSURfUEFSQU1FVEVSEAISEAoMRU1QVFlfRklFTERTEAMSDwoLTk9U",
            "X0FMTE9XRUQQBCJSChhHcm91cFJlZ2lzdHJhdGlvblJlcXVlc3QSIQoEYXV0",
            "aBgBIAEoCzITLm5ldGNvZGUuQXV0aFBhY2tldBITCgttYXRyX251bWJlchgC",
            "IAMoCSLkAQoZR3JvdXBSZWdpc3RyYXRpb25SZXNwb25zZRJACgplcnJvcl9j",
            "b2RlGAEgASgOMiwubmV0Y29kZS5Hcm91cFJlZ2lzdHJhdGlvblJlc3BvbnNl",
            "LkVycm9yQ29kZSKEAQoJRXJyb3JDb2RlEhMKD1VOREVGSU5FRF9FUlJPUhAA",
            "EgYKAk9LEAESEAoMVU5LTk9XTl9VU0VSEAISGgoWVE9PX01BTllfR1JPVVBf",
            "TUVNQkVSUxADEhsKF1VTRVJfQUxSRUFEWV9SRUdJU1RFUkVEEAQSDwoLQVVU",
            "SF9GQUlMRUQQBSIpCg9EaXJlY3RDaGFsbGVuZ2USFgoOdXNlcl9wc2V1ZG9u",
            "eW0YASABKAkiigEKFE1hdGNobWFraW5nUGFyYW1ldGVyEi0KEXJhbmRvbV9p",
            "c19kZWZhdWx0GAogASgLMhAubmV0Y29kZS5Ob3RoaW5nSAASNgoSZGlyZWN0",
            "X21hdGNobWFraW5nGAsgASgLMhgubmV0Y29kZS5EaXJlY3RDaGFsbGVuZ2VI",
            "AEILCglwYXJhbWV0ZXIi3wEKDE1hdGNoUmVxdWVzdBISCgp1c2VyX3Rva2Vu",
            "GAEgASgJEhIKCmdhbWVfdG9rZW4YAiABKAkSPQoWbWF0Y2htYWtpbmdfcGFy",
            "YW1ldGVycxgDIAEoCzIdLm5ldGNvZGUuTWF0Y2htYWtpbmdQYXJhbWV0ZXIS",
            "IgoadGltZW91dF9zdWdnZXN0aW9uX3NlY29uZHMYBCABKA0SMQoTZG9tX2dh",
            "bWVfcGFyYW1ldGVycxgMIAEoCzISLmRvbS5HYW1lUGFyYW1ldGVySABCEQoP",
            "Z2FtZV9wYXJhbWV0ZXJzIj4KDU1hdGNoUmVzcG9uc2USEwoLbWF0Y2hfdG9r",
            "ZW4YASABKAkSGAoQYmVnaW5uaW5nX3BsYXllchgCIAEoCCJsCgtUdXJuUmVx",
            "dWVzdBIoCghtYXRjaF9pZBgBIAEoCzIWLm5ldGNvZGUuTWF0Y2hJRFBhY2tl",
            "dBImCg1kb21fZ2FtZV90dXJuGAwgASgLMg0uZG9tLkdhbWVUdXJuSABCCwoJ",
            "Z2FtZV90dXJuInAKDFR1cm5SZXNwb25zZRIoCgt0dXJuX3N0YXR1cxgBIAEo",
            "DjITLm5ldGNvZGUuVHVyblN0YXR1cxIoCg5kb21fZ2FtZV9zdGF0ZRgMIAEo",
            "CzIOLmRvbS5HYW1lU3RhdGVIAEIMCgpnYW1lX3N0YXRlIo8BChFHYW1lU3Rh",
            "dGVSZXNwb25zZRIoCgtnYW1lX3N0YXR1cxgBIAEoDjITLm5ldGNvZGUuR2Ft",
            "ZVN0YXR1cxIYChBiZWdpbm5pbmdfcGxheWVyGAIgASgIEigKDmRvbV9nYW1l",
            "X3N0YXRlGAwgASgLMg4uZG9tLkdhbWVTdGF0ZUgAQgwKCmdhbWVfc3RhdGUi",
            "RwoUT3Bwb25lbnRJbmZvUmVzcG9uc2USFgoOdXNlcl9wc2V1ZG9ueW0YASAB",
            "KAkSFwoPZ3JvdXBfcHNldWRvbnltGAIgASgJIgkKB05vdGhpbmcqSQoKVHVy",
            "blN0YXR1cxIGCgJPSxAAEhAKDElOVkFMSURfVFVSThABEhEKDU5PVF9ZT1VS",
            "X1RVUk4QAhIOCgpNQVRDSF9PVkVSEAMqggEKCkdhbWVTdGF0dXMSDQoJWU9V",
            "Ul9UVVJOEAASEgoOT1BQT05FTlRTX1RVUk4QARINCglNQVRDSF9XT04QAxIO",
            "CgpNQVRDSF9MT1NUEAQSCAoERFJBVxAFEhUKEU1BVENIX05PVF9TVEFSVEVE",
            "EAYSEQoNTUFUQ0hfQUJPUlRFRBAHMqQGCgdHYW1lQ29tEjkKCE5ld01hdGNo",
            "EhUubmV0Y29kZS5NYXRjaFJlcXVlc3QaFi5uZXRjb2RlLk1hdGNoUmVzcG9u",
            "c2USOQoKU3VibWl0VHVybhIULm5ldGNvZGUuVHVyblJlcXVlc3QaFS5uZXRj",
            "b2RlLlR1cm5SZXNwb25zZRJCCgxHZXRHYW1lU3RhdGUSFi5uZXRjb2RlLk1h",
            "dGNoSURQYWNrZXQaGi5uZXRjb2RlLkdhbWVTdGF0ZVJlc3BvbnNlEkEKCkdl",
            "dFRpbWVvdXQSFi5uZXRjb2RlLk1hdGNoSURQYWNrZXQaGy5uZXRjb2RlLkdl",
            "dFRpbWVvdXRSZXNwb25zZRJICg9HZXRPcHBvbmVudEluZm8SFi5uZXRjb2Rl",
            "Lk1hdGNoSURQYWNrZXQaHS5uZXRjb2RlLk9wcG9uZW50SW5mb1Jlc3BvbnNl",
            "EjYKCkFib3J0TWF0Y2gSFi5uZXRjb2RlLk1hdGNoSURQYWNrZXQaEC5uZXRj",
            "b2RlLk5vdGhpbmcSVwoQVXNlclJlZ2lzdHJhdGlvbhIgLm5ldGNvZGUuVXNl",
            "clJlZ2lzdHJhdGlvblJlcXVlc3QaIS5uZXRjb2RlLlVzZXJSZWdpc3RyYXRp",
            "b25SZXNwb25zZRJaChFHcm91cFJlZ2lzdHJhdGlvbhIhLm5ldGNvZGUuR3Jv",
            "dXBSZWdpc3RyYXRpb25SZXF1ZXN0GiIubmV0Y29kZS5Hcm91cFJlZ2lzdHJh",
            "dGlvblJlc3BvbnNlElAKEVNldEdyb3VwUHNldWRvbnltEhwubmV0Y29kZS5T",
            "ZXRQc2V1ZG9ueW1SZXF1ZXN0Gh0ubmV0Y29kZS5TZXRQc2V1ZG9ueW1SZXNw",
            "b25zZRJPChBTZXRVc2VyUHNldWRvbnltEhwubmV0Y29kZS5TZXRQc2V1ZG9u",
            "eW1SZXF1ZXN0Gh0ubmV0Y29kZS5TZXRQc2V1ZG9ueW1SZXNwb25zZRJCCgxH",
            "ZXRVc2VyVG9rZW4SEy5uZXRjb2RlLkF1dGhQYWNrZXQaHS5uZXRjb2RlLkdl",
            "dFVzZXJUb2tlblJlc3BvbnNlQhGqAg5Eb21pbmVjdENsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DominectClient.DominectReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DominectClient.TurnStatus), typeof(global::DominectClient.GameStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.AuthPacket), global::DominectClient.AuthPacket.Parser, new[]{ "MatrNumber", "Secret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.MatchIDPacket), global::DominectClient.MatchIDPacket.Parser, new[]{ "UserToken", "MatchToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.GetTimeoutResponse), global::DominectClient.GetTimeoutResponse.Parser, new[]{ "TimeoutSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.SetPseudonymRequest), global::DominectClient.SetPseudonymRequest.Parser, new[]{ "Auth", "Pseudonym" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.SetPseudonymResponse), global::DominectClient.SetPseudonymResponse.Parser, new[]{ "ErrorCode" }, null, new[]{ typeof(global::DominectClient.SetPseudonymResponse.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.GetUserTokenResponse), global::DominectClient.GetUserTokenResponse.Parser, new[]{ "UserToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.UserRegistrationRequest), global::DominectClient.UserRegistrationRequest.Parser, new[]{ "Fullname", "Email", "MatrNumber", "Secret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.UserRegistrationResponse), global::DominectClient.UserRegistrationResponse.Parser, new[]{ "ErrorCode" }, null, new[]{ typeof(global::DominectClient.UserRegistrationResponse.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.GroupRegistrationRequest), global::DominectClient.GroupRegistrationRequest.Parser, new[]{ "Auth", "MatrNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.GroupRegistrationResponse), global::DominectClient.GroupRegistrationResponse.Parser, new[]{ "ErrorCode" }, null, new[]{ typeof(global::DominectClient.GroupRegistrationResponse.Types.ErrorCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.DirectChallenge), global::DominectClient.DirectChallenge.Parser, new[]{ "UserPseudonym" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.MatchmakingParameter), global::DominectClient.MatchmakingParameter.Parser, new[]{ "RandomIsDefault", "DirectMatchmaking" }, new[]{ "Parameter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.MatchRequest), global::DominectClient.MatchRequest.Parser, new[]{ "UserToken", "GameToken", "MatchmakingParameters", "TimeoutSuggestionSeconds", "DomGameParameters" }, new[]{ "GameParameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.MatchResponse), global::DominectClient.MatchResponse.Parser, new[]{ "MatchToken", "BeginningPlayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.TurnRequest), global::DominectClient.TurnRequest.Parser, new[]{ "MatchId", "DomGameTurn" }, new[]{ "GameTurn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.TurnResponse), global::DominectClient.TurnResponse.Parser, new[]{ "TurnStatus", "DomGameState" }, new[]{ "GameState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.GameStateResponse), global::DominectClient.GameStateResponse.Parser, new[]{ "GameStatus", "BeginningPlayer", "DomGameState" }, new[]{ "GameState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.OpponentInfoResponse), global::DominectClient.OpponentInfoResponse.Parser, new[]{ "UserPseudonym", "GroupPseudonym" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DominectClient.Nothing), global::DominectClient.Nothing.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TurnStatus {
    [pbr::OriginalName("OK")] Ok = 0,
    [pbr::OriginalName("INVALID_TURN")] InvalidTurn = 1,
    [pbr::OriginalName("NOT_YOUR_TURN")] NotYourTurn = 2,
    [pbr::OriginalName("MATCH_OVER")] MatchOver = 3,
  }

  public enum GameStatus {
    [pbr::OriginalName("YOUR_TURN")] YourTurn = 0,
    [pbr::OriginalName("OPPONENTS_TURN")] OpponentsTurn = 1,
    [pbr::OriginalName("MATCH_WON")] MatchWon = 3,
    [pbr::OriginalName("MATCH_LOST")] MatchLost = 4,
    [pbr::OriginalName("DRAW")] Draw = 5,
    [pbr::OriginalName("MATCH_NOT_STARTED")] MatchNotStarted = 6,
    [pbr::OriginalName("MATCH_ABORTED")] MatchAborted = 7,
  }

  #endregion

  #region Messages
  public sealed partial class AuthPacket : pb::IMessage<AuthPacket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthPacket> _parser = new pb::MessageParser<AuthPacket>(() => new AuthPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthPacket(AuthPacket other) : this() {
      matrNumber_ = other.matrNumber_;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthPacket Clone() {
      return new AuthPacket(this);
    }

    /// <summary>Field number for the "matr_number" field.</summary>
    public const int MatrNumberFieldNumber = 1;
    private string matrNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatrNumber {
      get { return matrNumber_; }
      set {
        matrNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatrNumber != other.MatrNumber) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatrNumber.Length != 0) hash ^= MatrNumber.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatrNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatrNumber);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatrNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatrNumber);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatrNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatrNumber);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthPacket other) {
      if (other == null) {
        return;
      }
      if (other.MatrNumber.Length != 0) {
        MatrNumber = other.MatrNumber;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatrNumber = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatrNumber = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchIDPacket : pb::IMessage<MatchIDPacket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchIDPacket> _parser = new pb::MessageParser<MatchIDPacket>(() => new MatchIDPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchIDPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchIDPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchIDPacket(MatchIDPacket other) : this() {
      userToken_ = other.userToken_;
      matchToken_ = other.matchToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchIDPacket Clone() {
      return new MatchIDPacket(this);
    }

    /// <summary>Field number for the "user_token" field.</summary>
    public const int UserTokenFieldNumber = 1;
    private string userToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "match_token" field.</summary>
    public const int MatchTokenFieldNumber = 2;
    private string matchToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchToken {
      get { return matchToken_; }
      set {
        matchToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchIDPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchIDPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserToken != other.UserToken) return false;
      if (MatchToken != other.MatchToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
      if (MatchToken.Length != 0) hash ^= MatchToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (MatchToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MatchToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (MatchToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MatchToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (MatchToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchIDPacket other) {
      if (other == null) {
        return;
      }
      if (other.UserToken.Length != 0) {
        UserToken = other.UserToken;
      }
      if (other.MatchToken.Length != 0) {
        MatchToken = other.MatchToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
          case 18: {
            MatchToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
          case 18: {
            MatchToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTimeoutResponse : pb::IMessage<GetTimeoutResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTimeoutResponse> _parser = new pb::MessageParser<GetTimeoutResponse>(() => new GetTimeoutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTimeoutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTimeoutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTimeoutResponse(GetTimeoutResponse other) : this() {
      timeoutSeconds_ = other.timeoutSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTimeoutResponse Clone() {
      return new GetTimeoutResponse(this);
    }

    /// <summary>Field number for the "timeout_seconds" field.</summary>
    public const int TimeoutSecondsFieldNumber = 1;
    private uint timeoutSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TimeoutSeconds {
      get { return timeoutSeconds_; }
      set {
        timeoutSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTimeoutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTimeoutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeoutSeconds != other.TimeoutSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeoutSeconds != 0) hash ^= TimeoutSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeoutSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TimeoutSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeoutSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TimeoutSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeoutSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeoutSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTimeoutResponse other) {
      if (other == null) {
        return;
      }
      if (other.TimeoutSeconds != 0) {
        TimeoutSeconds = other.TimeoutSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeoutSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeoutSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetPseudonymRequest : pb::IMessage<SetPseudonymRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetPseudonymRequest> _parser = new pb::MessageParser<SetPseudonymRequest>(() => new SetPseudonymRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPseudonymRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPseudonymRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPseudonymRequest(SetPseudonymRequest other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      pseudonym_ = other.pseudonym_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPseudonymRequest Clone() {
      return new SetPseudonymRequest(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::DominectClient.AuthPacket auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.AuthPacket Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "pseudonym" field.</summary>
    public const int PseudonymFieldNumber = 2;
    private string pseudonym_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pseudonym {
      get { return pseudonym_; }
      set {
        pseudonym_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPseudonymRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPseudonymRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Pseudonym != other.Pseudonym) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Pseudonym.Length != 0) hash ^= Pseudonym.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Pseudonym.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pseudonym);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Pseudonym.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pseudonym);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Pseudonym.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pseudonym);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPseudonymRequest other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::DominectClient.AuthPacket();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Pseudonym.Length != 0) {
        Pseudonym = other.Pseudonym;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::DominectClient.AuthPacket();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Pseudonym = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::DominectClient.AuthPacket();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Pseudonym = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetPseudonymResponse : pb::IMessage<SetPseudonymResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetPseudonymResponse> _parser = new pb::MessageParser<SetPseudonymResponse>(() => new SetPseudonymResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPseudonymResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPseudonymResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPseudonymResponse(SetPseudonymResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPseudonymResponse Clone() {
      return new SetPseudonymResponse(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::DominectClient.SetPseudonymResponse.Types.ErrorCode errorCode_ = global::DominectClient.SetPseudonymResponse.Types.ErrorCode.UndefinedError;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.SetPseudonymResponse.Types.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPseudonymResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPseudonymResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::DominectClient.SetPseudonymResponse.Types.ErrorCode.UndefinedError) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != global::DominectClient.SetPseudonymResponse.Types.ErrorCode.UndefinedError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != global::DominectClient.SetPseudonymResponse.Types.ErrorCode.UndefinedError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::DominectClient.SetPseudonymResponse.Types.ErrorCode.UndefinedError) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPseudonymResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::DominectClient.SetPseudonymResponse.Types.ErrorCode.UndefinedError) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::DominectClient.SetPseudonymResponse.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = (global::DominectClient.SetPseudonymResponse.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SetPseudonymResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("UNDEFINED_ERROR")] UndefinedError = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("REQUEST_REJECTED")] RequestRejected = 2,
        [pbr::OriginalName("ALREADY_USED")] AlreadyUsed = 3,
        [pbr::OriginalName("TOO_LONG")] TooLong = 4,
        [pbr::OriginalName("EMPTY_FIELDS")] EmptyFields = 5,
      }

    }
    #endregion

  }

  public sealed partial class GetUserTokenResponse : pb::IMessage<GetUserTokenResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserTokenResponse> _parser = new pb::MessageParser<GetUserTokenResponse>(() => new GetUserTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserTokenResponse(GetUserTokenResponse other) : this() {
      userToken_ = other.userToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserTokenResponse Clone() {
      return new GetUserTokenResponse(this);
    }

    /// <summary>Field number for the "user_token" field.</summary>
    public const int UserTokenFieldNumber = 1;
    private string userToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserToken != other.UserToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserToken.Length != 0) {
        UserToken = other.UserToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRegistrationRequest : pb::IMessage<UserRegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRegistrationRequest> _parser = new pb::MessageParser<UserRegistrationRequest>(() => new UserRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationRequest(UserRegistrationRequest other) : this() {
      fullname_ = other.fullname_;
      email_ = other.email_;
      matrNumber_ = other.matrNumber_;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationRequest Clone() {
      return new UserRegistrationRequest(this);
    }

    /// <summary>Field number for the "fullname" field.</summary>
    public const int FullnameFieldNumber = 1;
    private string fullname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fullname {
      get { return fullname_; }
      set {
        fullname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "matr_number" field.</summary>
    public const int MatrNumberFieldNumber = 3;
    private string matrNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatrNumber {
      get { return matrNumber_; }
      set {
        matrNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 4;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fullname != other.Fullname) return false;
      if (Email != other.Email) return false;
      if (MatrNumber != other.MatrNumber) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fullname.Length != 0) hash ^= Fullname.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (MatrNumber.Length != 0) hash ^= MatrNumber.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Fullname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fullname);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (MatrNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MatrNumber);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Fullname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Fullname);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (MatrNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MatrNumber);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fullname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fullname);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (MatrNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatrNumber);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Fullname.Length != 0) {
        Fullname = other.Fullname;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.MatrNumber.Length != 0) {
        MatrNumber = other.MatrNumber;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fullname = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            MatrNumber = input.ReadString();
            break;
          }
          case 34: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Fullname = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            MatrNumber = input.ReadString();
            break;
          }
          case 34: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRegistrationResponse : pb::IMessage<UserRegistrationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRegistrationResponse> _parser = new pb::MessageParser<UserRegistrationResponse>(() => new UserRegistrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRegistrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationResponse(UserRegistrationResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRegistrationResponse Clone() {
      return new UserRegistrationResponse(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::DominectClient.UserRegistrationResponse.Types.ErrorCode errorCode_ = global::DominectClient.UserRegistrationResponse.Types.ErrorCode.UndefinedError;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.UserRegistrationResponse.Types.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRegistrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRegistrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::DominectClient.UserRegistrationResponse.Types.ErrorCode.UndefinedError) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != global::DominectClient.UserRegistrationResponse.Types.ErrorCode.UndefinedError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != global::DominectClient.UserRegistrationResponse.Types.ErrorCode.UndefinedError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::DominectClient.UserRegistrationResponse.Types.ErrorCode.UndefinedError) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRegistrationResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::DominectClient.UserRegistrationResponse.Types.ErrorCode.UndefinedError) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::DominectClient.UserRegistrationResponse.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = (global::DominectClient.UserRegistrationResponse.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserRegistrationResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("UNDEFINED_ERROR")] UndefinedError = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("INVALID_PARAMETER")] InvalidParameter = 2,
        [pbr::OriginalName("EMPTY_FIELDS")] EmptyFields = 3,
        [pbr::OriginalName("NOT_ALLOWED")] NotAllowed = 4,
      }

    }
    #endregion

  }

  public sealed partial class GroupRegistrationRequest : pb::IMessage<GroupRegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupRegistrationRequest> _parser = new pb::MessageParser<GroupRegistrationRequest>(() => new GroupRegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupRegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRegistrationRequest(GroupRegistrationRequest other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      matrNumber_ = other.matrNumber_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRegistrationRequest Clone() {
      return new GroupRegistrationRequest(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::DominectClient.AuthPacket auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.AuthPacket Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "matr_number" field.</summary>
    public const int MatrNumberFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_matrNumber_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> matrNumber_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MatrNumber {
      get { return matrNumber_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupRegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupRegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if(!matrNumber_.Equals(other.matrNumber_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      hash ^= matrNumber_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      matrNumber_.WriteTo(output, _repeated_matrNumber_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      matrNumber_.WriteTo(ref output, _repeated_matrNumber_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      size += matrNumber_.CalculateSize(_repeated_matrNumber_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupRegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::DominectClient.AuthPacket();
        }
        Auth.MergeFrom(other.Auth);
      }
      matrNumber_.Add(other.matrNumber_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::DominectClient.AuthPacket();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            matrNumber_.AddEntriesFrom(input, _repeated_matrNumber_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::DominectClient.AuthPacket();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            matrNumber_.AddEntriesFrom(ref input, _repeated_matrNumber_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupRegistrationResponse : pb::IMessage<GroupRegistrationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupRegistrationResponse> _parser = new pb::MessageParser<GroupRegistrationResponse>(() => new GroupRegistrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupRegistrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRegistrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRegistrationResponse(GroupRegistrationResponse other) : this() {
      errorCode_ = other.errorCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRegistrationResponse Clone() {
      return new GroupRegistrationResponse(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::DominectClient.GroupRegistrationResponse.Types.ErrorCode errorCode_ = global::DominectClient.GroupRegistrationResponse.Types.ErrorCode.UndefinedError;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.GroupRegistrationResponse.Types.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupRegistrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupRegistrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != global::DominectClient.GroupRegistrationResponse.Types.ErrorCode.UndefinedError) hash ^= ErrorCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != global::DominectClient.GroupRegistrationResponse.Types.ErrorCode.UndefinedError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != global::DominectClient.GroupRegistrationResponse.Types.ErrorCode.UndefinedError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != global::DominectClient.GroupRegistrationResponse.Types.ErrorCode.UndefinedError) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupRegistrationResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != global::DominectClient.GroupRegistrationResponse.Types.ErrorCode.UndefinedError) {
        ErrorCode = other.ErrorCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = (global::DominectClient.GroupRegistrationResponse.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = (global::DominectClient.GroupRegistrationResponse.Types.ErrorCode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GroupRegistrationResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("UNDEFINED_ERROR")] UndefinedError = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("UNKNOWN_USER")] UnknownUser = 2,
        [pbr::OriginalName("TOO_MANY_GROUP_MEMBERS")] TooManyGroupMembers = 3,
        [pbr::OriginalName("USER_ALREADY_REGISTERED")] UserAlreadyRegistered = 4,
        [pbr::OriginalName("AUTH_FAILED")] AuthFailed = 5,
      }

    }
    #endregion

  }

  public sealed partial class DirectChallenge : pb::IMessage<DirectChallenge>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DirectChallenge> _parser = new pb::MessageParser<DirectChallenge>(() => new DirectChallenge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DirectChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectChallenge(DirectChallenge other) : this() {
      userPseudonym_ = other.userPseudonym_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DirectChallenge Clone() {
      return new DirectChallenge(this);
    }

    /// <summary>Field number for the "user_pseudonym" field.</summary>
    public const int UserPseudonymFieldNumber = 1;
    private string userPseudonym_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPseudonym {
      get { return userPseudonym_; }
      set {
        userPseudonym_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DirectChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DirectChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserPseudonym != other.UserPseudonym) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserPseudonym.Length != 0) hash ^= UserPseudonym.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserPseudonym.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserPseudonym);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserPseudonym.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserPseudonym);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserPseudonym.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPseudonym);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DirectChallenge other) {
      if (other == null) {
        return;
      }
      if (other.UserPseudonym.Length != 0) {
        UserPseudonym = other.UserPseudonym;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserPseudonym = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserPseudonym = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchmakingParameter : pb::IMessage<MatchmakingParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchmakingParameter> _parser = new pb::MessageParser<MatchmakingParameter>(() => new MatchmakingParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchmakingParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchmakingParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchmakingParameter(MatchmakingParameter other) : this() {
      switch (other.ParameterCase) {
        case ParameterOneofCase.RandomIsDefault:
          RandomIsDefault = other.RandomIsDefault.Clone();
          break;
        case ParameterOneofCase.DirectMatchmaking:
          DirectMatchmaking = other.DirectMatchmaking.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchmakingParameter Clone() {
      return new MatchmakingParameter(this);
    }

    /// <summary>Field number for the "random_is_default" field.</summary>
    public const int RandomIsDefaultFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.Nothing RandomIsDefault {
      get { return parameterCase_ == ParameterOneofCase.RandomIsDefault ? (global::DominectClient.Nothing) parameter_ : null; }
      set {
        parameter_ = value;
        parameterCase_ = value == null ? ParameterOneofCase.None : ParameterOneofCase.RandomIsDefault;
      }
    }

    /// <summary>Field number for the "direct_matchmaking" field.</summary>
    public const int DirectMatchmakingFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.DirectChallenge DirectMatchmaking {
      get { return parameterCase_ == ParameterOneofCase.DirectMatchmaking ? (global::DominectClient.DirectChallenge) parameter_ : null; }
      set {
        parameter_ = value;
        parameterCase_ = value == null ? ParameterOneofCase.None : ParameterOneofCase.DirectMatchmaking;
      }
    }

    private object parameter_;
    /// <summary>Enum of possible cases for the "parameter" oneof.</summary>
    public enum ParameterOneofCase {
      None = 0,
      RandomIsDefault = 10,
      DirectMatchmaking = 11,
    }
    private ParameterOneofCase parameterCase_ = ParameterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterOneofCase ParameterCase {
      get { return parameterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParameter() {
      parameterCase_ = ParameterOneofCase.None;
      parameter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchmakingParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchmakingParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RandomIsDefault, other.RandomIsDefault)) return false;
      if (!object.Equals(DirectMatchmaking, other.DirectMatchmaking)) return false;
      if (ParameterCase != other.ParameterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parameterCase_ == ParameterOneofCase.RandomIsDefault) hash ^= RandomIsDefault.GetHashCode();
      if (parameterCase_ == ParameterOneofCase.DirectMatchmaking) hash ^= DirectMatchmaking.GetHashCode();
      hash ^= (int) parameterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (parameterCase_ == ParameterOneofCase.RandomIsDefault) {
        output.WriteRawTag(82);
        output.WriteMessage(RandomIsDefault);
      }
      if (parameterCase_ == ParameterOneofCase.DirectMatchmaking) {
        output.WriteRawTag(90);
        output.WriteMessage(DirectMatchmaking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (parameterCase_ == ParameterOneofCase.RandomIsDefault) {
        output.WriteRawTag(82);
        output.WriteMessage(RandomIsDefault);
      }
      if (parameterCase_ == ParameterOneofCase.DirectMatchmaking) {
        output.WriteRawTag(90);
        output.WriteMessage(DirectMatchmaking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parameterCase_ == ParameterOneofCase.RandomIsDefault) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomIsDefault);
      }
      if (parameterCase_ == ParameterOneofCase.DirectMatchmaking) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirectMatchmaking);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchmakingParameter other) {
      if (other == null) {
        return;
      }
      switch (other.ParameterCase) {
        case ParameterOneofCase.RandomIsDefault:
          if (RandomIsDefault == null) {
            RandomIsDefault = new global::DominectClient.Nothing();
          }
          RandomIsDefault.MergeFrom(other.RandomIsDefault);
          break;
        case ParameterOneofCase.DirectMatchmaking:
          if (DirectMatchmaking == null) {
            DirectMatchmaking = new global::DominectClient.DirectChallenge();
          }
          DirectMatchmaking.MergeFrom(other.DirectMatchmaking);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            global::DominectClient.Nothing subBuilder = new global::DominectClient.Nothing();
            if (parameterCase_ == ParameterOneofCase.RandomIsDefault) {
              subBuilder.MergeFrom(RandomIsDefault);
            }
            input.ReadMessage(subBuilder);
            RandomIsDefault = subBuilder;
            break;
          }
          case 90: {
            global::DominectClient.DirectChallenge subBuilder = new global::DominectClient.DirectChallenge();
            if (parameterCase_ == ParameterOneofCase.DirectMatchmaking) {
              subBuilder.MergeFrom(DirectMatchmaking);
            }
            input.ReadMessage(subBuilder);
            DirectMatchmaking = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            global::DominectClient.Nothing subBuilder = new global::DominectClient.Nothing();
            if (parameterCase_ == ParameterOneofCase.RandomIsDefault) {
              subBuilder.MergeFrom(RandomIsDefault);
            }
            input.ReadMessage(subBuilder);
            RandomIsDefault = subBuilder;
            break;
          }
          case 90: {
            global::DominectClient.DirectChallenge subBuilder = new global::DominectClient.DirectChallenge();
            if (parameterCase_ == ParameterOneofCase.DirectMatchmaking) {
              subBuilder.MergeFrom(DirectMatchmaking);
            }
            input.ReadMessage(subBuilder);
            DirectMatchmaking = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchRequest : pb::IMessage<MatchRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchRequest> _parser = new pb::MessageParser<MatchRequest>(() => new MatchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchRequest(MatchRequest other) : this() {
      userToken_ = other.userToken_;
      gameToken_ = other.gameToken_;
      matchmakingParameters_ = other.matchmakingParameters_ != null ? other.matchmakingParameters_.Clone() : null;
      timeoutSuggestionSeconds_ = other.timeoutSuggestionSeconds_;
      switch (other.GameParametersCase) {
        case GameParametersOneofCase.DomGameParameters:
          DomGameParameters = other.DomGameParameters.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchRequest Clone() {
      return new MatchRequest(this);
    }

    /// <summary>Field number for the "user_token" field.</summary>
    public const int UserTokenFieldNumber = 1;
    private string userToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserToken {
      get { return userToken_; }
      set {
        userToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_token" field.</summary>
    public const int GameTokenFieldNumber = 2;
    private string gameToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameToken {
      get { return gameToken_; }
      set {
        gameToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "matchmaking_parameters" field.</summary>
    public const int MatchmakingParametersFieldNumber = 3;
    private global::DominectClient.MatchmakingParameter matchmakingParameters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.MatchmakingParameter MatchmakingParameters {
      get { return matchmakingParameters_; }
      set {
        matchmakingParameters_ = value;
      }
    }

    /// <summary>Field number for the "timeout_suggestion_seconds" field.</summary>
    public const int TimeoutSuggestionSecondsFieldNumber = 4;
    private uint timeoutSuggestionSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TimeoutSuggestionSeconds {
      get { return timeoutSuggestionSeconds_; }
      set {
        timeoutSuggestionSeconds_ = value;
      }
    }

    /// <summary>Field number for the "dom_game_parameters" field.</summary>
    public const int DomGameParametersFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.GameParameter DomGameParameters {
      get { return gameParametersCase_ == GameParametersOneofCase.DomGameParameters ? (global::DominectClient.GameParameter) gameParameters_ : null; }
      set {
        gameParameters_ = value;
        gameParametersCase_ = value == null ? GameParametersOneofCase.None : GameParametersOneofCase.DomGameParameters;
      }
    }

    private object gameParameters_;
    /// <summary>Enum of possible cases for the "game_parameters" oneof.</summary>
    public enum GameParametersOneofCase {
      None = 0,
      DomGameParameters = 12,
    }
    private GameParametersOneofCase gameParametersCase_ = GameParametersOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameParametersOneofCase GameParametersCase {
      get { return gameParametersCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameParameters() {
      gameParametersCase_ = GameParametersOneofCase.None;
      gameParameters_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserToken != other.UserToken) return false;
      if (GameToken != other.GameToken) return false;
      if (!object.Equals(MatchmakingParameters, other.MatchmakingParameters)) return false;
      if (TimeoutSuggestionSeconds != other.TimeoutSuggestionSeconds) return false;
      if (!object.Equals(DomGameParameters, other.DomGameParameters)) return false;
      if (GameParametersCase != other.GameParametersCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserToken.Length != 0) hash ^= UserToken.GetHashCode();
      if (GameToken.Length != 0) hash ^= GameToken.GetHashCode();
      if (matchmakingParameters_ != null) hash ^= MatchmakingParameters.GetHashCode();
      if (TimeoutSuggestionSeconds != 0) hash ^= TimeoutSuggestionSeconds.GetHashCode();
      if (gameParametersCase_ == GameParametersOneofCase.DomGameParameters) hash ^= DomGameParameters.GetHashCode();
      hash ^= (int) gameParametersCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (GameToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameToken);
      }
      if (matchmakingParameters_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MatchmakingParameters);
      }
      if (TimeoutSuggestionSeconds != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeoutSuggestionSeconds);
      }
      if (gameParametersCase_ == GameParametersOneofCase.DomGameParameters) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserToken);
      }
      if (GameToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameToken);
      }
      if (matchmakingParameters_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MatchmakingParameters);
      }
      if (TimeoutSuggestionSeconds != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeoutSuggestionSeconds);
      }
      if (gameParametersCase_ == GameParametersOneofCase.DomGameParameters) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserToken);
      }
      if (GameToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameToken);
      }
      if (matchmakingParameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchmakingParameters);
      }
      if (TimeoutSuggestionSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeoutSuggestionSeconds);
      }
      if (gameParametersCase_ == GameParametersOneofCase.DomGameParameters) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DomGameParameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserToken.Length != 0) {
        UserToken = other.UserToken;
      }
      if (other.GameToken.Length != 0) {
        GameToken = other.GameToken;
      }
      if (other.matchmakingParameters_ != null) {
        if (matchmakingParameters_ == null) {
          MatchmakingParameters = new global::DominectClient.MatchmakingParameter();
        }
        MatchmakingParameters.MergeFrom(other.MatchmakingParameters);
      }
      if (other.TimeoutSuggestionSeconds != 0) {
        TimeoutSuggestionSeconds = other.TimeoutSuggestionSeconds;
      }
      switch (other.GameParametersCase) {
        case GameParametersOneofCase.DomGameParameters:
          if (DomGameParameters == null) {
            DomGameParameters = new global::DominectClient.GameParameter();
          }
          DomGameParameters.MergeFrom(other.DomGameParameters);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
          case 18: {
            GameToken = input.ReadString();
            break;
          }
          case 26: {
            if (matchmakingParameters_ == null) {
              MatchmakingParameters = new global::DominectClient.MatchmakingParameter();
            }
            input.ReadMessage(MatchmakingParameters);
            break;
          }
          case 32: {
            TimeoutSuggestionSeconds = input.ReadUInt32();
            break;
          }
          case 98: {
            global::DominectClient.GameParameter subBuilder = new global::DominectClient.GameParameter();
            if (gameParametersCase_ == GameParametersOneofCase.DomGameParameters) {
              subBuilder.MergeFrom(DomGameParameters);
            }
            input.ReadMessage(subBuilder);
            DomGameParameters = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserToken = input.ReadString();
            break;
          }
          case 18: {
            GameToken = input.ReadString();
            break;
          }
          case 26: {
            if (matchmakingParameters_ == null) {
              MatchmakingParameters = new global::DominectClient.MatchmakingParameter();
            }
            input.ReadMessage(MatchmakingParameters);
            break;
          }
          case 32: {
            TimeoutSuggestionSeconds = input.ReadUInt32();
            break;
          }
          case 98: {
            global::DominectClient.GameParameter subBuilder = new global::DominectClient.GameParameter();
            if (gameParametersCase_ == GameParametersOneofCase.DomGameParameters) {
              subBuilder.MergeFrom(DomGameParameters);
            }
            input.ReadMessage(subBuilder);
            DomGameParameters = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchResponse : pb::IMessage<MatchResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchResponse> _parser = new pb::MessageParser<MatchResponse>(() => new MatchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchResponse(MatchResponse other) : this() {
      matchToken_ = other.matchToken_;
      beginningPlayer_ = other.beginningPlayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchResponse Clone() {
      return new MatchResponse(this);
    }

    /// <summary>Field number for the "match_token" field.</summary>
    public const int MatchTokenFieldNumber = 1;
    private string matchToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchToken {
      get { return matchToken_; }
      set {
        matchToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "beginning_player" field.</summary>
    public const int BeginningPlayerFieldNumber = 2;
    private bool beginningPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BeginningPlayer {
      get { return beginningPlayer_; }
      set {
        beginningPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchToken != other.MatchToken) return false;
      if (BeginningPlayer != other.BeginningPlayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchToken.Length != 0) hash ^= MatchToken.GetHashCode();
      if (BeginningPlayer != false) hash ^= BeginningPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchToken);
      }
      if (BeginningPlayer != false) {
        output.WriteRawTag(16);
        output.WriteBool(BeginningPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatchToken);
      }
      if (BeginningPlayer != false) {
        output.WriteRawTag(16);
        output.WriteBool(BeginningPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchToken);
      }
      if (BeginningPlayer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchResponse other) {
      if (other == null) {
        return;
      }
      if (other.MatchToken.Length != 0) {
        MatchToken = other.MatchToken;
      }
      if (other.BeginningPlayer != false) {
        BeginningPlayer = other.BeginningPlayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchToken = input.ReadString();
            break;
          }
          case 16: {
            BeginningPlayer = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MatchToken = input.ReadString();
            break;
          }
          case 16: {
            BeginningPlayer = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TurnRequest : pb::IMessage<TurnRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TurnRequest> _parser = new pb::MessageParser<TurnRequest>(() => new TurnRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TurnRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnRequest(TurnRequest other) : this() {
      matchId_ = other.matchId_ != null ? other.matchId_.Clone() : null;
      switch (other.GameTurnCase) {
        case GameTurnOneofCase.DomGameTurn:
          DomGameTurn = other.DomGameTurn.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnRequest Clone() {
      return new TurnRequest(this);
    }

    /// <summary>Field number for the "match_id" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private global::DominectClient.MatchIDPacket matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.MatchIDPacket MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    /// <summary>Field number for the "dom_game_turn" field.</summary>
    public const int DomGameTurnFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.GameTurn DomGameTurn {
      get { return gameTurnCase_ == GameTurnOneofCase.DomGameTurn ? (global::DominectClient.GameTurn) gameTurn_ : null; }
      set {
        gameTurn_ = value;
        gameTurnCase_ = value == null ? GameTurnOneofCase.None : GameTurnOneofCase.DomGameTurn;
      }
    }

    private object gameTurn_;
    /// <summary>Enum of possible cases for the "game_turn" oneof.</summary>
    public enum GameTurnOneofCase {
      None = 0,
      DomGameTurn = 12,
    }
    private GameTurnOneofCase gameTurnCase_ = GameTurnOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameTurnOneofCase GameTurnCase {
      get { return gameTurnCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameTurn() {
      gameTurnCase_ = GameTurnOneofCase.None;
      gameTurn_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TurnRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TurnRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MatchId, other.MatchId)) return false;
      if (!object.Equals(DomGameTurn, other.DomGameTurn)) return false;
      if (GameTurnCase != other.GameTurnCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (matchId_ != null) hash ^= MatchId.GetHashCode();
      if (gameTurnCase_ == GameTurnOneofCase.DomGameTurn) hash ^= DomGameTurn.GetHashCode();
      hash ^= (int) gameTurnCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (matchId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatchId);
      }
      if (gameTurnCase_ == GameTurnOneofCase.DomGameTurn) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameTurn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (matchId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatchId);
      }
      if (gameTurnCase_ == GameTurnOneofCase.DomGameTurn) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameTurn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (matchId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchId);
      }
      if (gameTurnCase_ == GameTurnOneofCase.DomGameTurn) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DomGameTurn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TurnRequest other) {
      if (other == null) {
        return;
      }
      if (other.matchId_ != null) {
        if (matchId_ == null) {
          MatchId = new global::DominectClient.MatchIDPacket();
        }
        MatchId.MergeFrom(other.MatchId);
      }
      switch (other.GameTurnCase) {
        case GameTurnOneofCase.DomGameTurn:
          if (DomGameTurn == null) {
            DomGameTurn = new global::DominectClient.GameTurn();
          }
          DomGameTurn.MergeFrom(other.DomGameTurn);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (matchId_ == null) {
              MatchId = new global::DominectClient.MatchIDPacket();
            }
            input.ReadMessage(MatchId);
            break;
          }
          case 98: {
            global::DominectClient.GameTurn subBuilder = new global::DominectClient.GameTurn();
            if (gameTurnCase_ == GameTurnOneofCase.DomGameTurn) {
              subBuilder.MergeFrom(DomGameTurn);
            }
            input.ReadMessage(subBuilder);
            DomGameTurn = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (matchId_ == null) {
              MatchId = new global::DominectClient.MatchIDPacket();
            }
            input.ReadMessage(MatchId);
            break;
          }
          case 98: {
            global::DominectClient.GameTurn subBuilder = new global::DominectClient.GameTurn();
            if (gameTurnCase_ == GameTurnOneofCase.DomGameTurn) {
              subBuilder.MergeFrom(DomGameTurn);
            }
            input.ReadMessage(subBuilder);
            DomGameTurn = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TurnResponse : pb::IMessage<TurnResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TurnResponse> _parser = new pb::MessageParser<TurnResponse>(() => new TurnResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TurnResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnResponse(TurnResponse other) : this() {
      turnStatus_ = other.turnStatus_;
      switch (other.GameStateCase) {
        case GameStateOneofCase.DomGameState:
          DomGameState = other.DomGameState.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnResponse Clone() {
      return new TurnResponse(this);
    }

    /// <summary>Field number for the "turn_status" field.</summary>
    public const int TurnStatusFieldNumber = 1;
    private global::DominectClient.TurnStatus turnStatus_ = global::DominectClient.TurnStatus.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.TurnStatus TurnStatus {
      get { return turnStatus_; }
      set {
        turnStatus_ = value;
      }
    }

    /// <summary>Field number for the "dom_game_state" field.</summary>
    public const int DomGameStateFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.GameState DomGameState {
      get { return gameStateCase_ == GameStateOneofCase.DomGameState ? (global::DominectClient.GameState) gameState_ : null; }
      set {
        gameState_ = value;
        gameStateCase_ = value == null ? GameStateOneofCase.None : GameStateOneofCase.DomGameState;
      }
    }

    private object gameState_;
    /// <summary>Enum of possible cases for the "game_state" oneof.</summary>
    public enum GameStateOneofCase {
      None = 0,
      DomGameState = 12,
    }
    private GameStateOneofCase gameStateCase_ = GameStateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStateOneofCase GameStateCase {
      get { return gameStateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameState() {
      gameStateCase_ = GameStateOneofCase.None;
      gameState_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TurnResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TurnResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TurnStatus != other.TurnStatus) return false;
      if (!object.Equals(DomGameState, other.DomGameState)) return false;
      if (GameStateCase != other.GameStateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TurnStatus != global::DominectClient.TurnStatus.Ok) hash ^= TurnStatus.GetHashCode();
      if (gameStateCase_ == GameStateOneofCase.DomGameState) hash ^= DomGameState.GetHashCode();
      hash ^= (int) gameStateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TurnStatus != global::DominectClient.TurnStatus.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TurnStatus);
      }
      if (gameStateCase_ == GameStateOneofCase.DomGameState) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TurnStatus != global::DominectClient.TurnStatus.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TurnStatus);
      }
      if (gameStateCase_ == GameStateOneofCase.DomGameState) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TurnStatus != global::DominectClient.TurnStatus.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TurnStatus);
      }
      if (gameStateCase_ == GameStateOneofCase.DomGameState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DomGameState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TurnResponse other) {
      if (other == null) {
        return;
      }
      if (other.TurnStatus != global::DominectClient.TurnStatus.Ok) {
        TurnStatus = other.TurnStatus;
      }
      switch (other.GameStateCase) {
        case GameStateOneofCase.DomGameState:
          if (DomGameState == null) {
            DomGameState = new global::DominectClient.GameState();
          }
          DomGameState.MergeFrom(other.DomGameState);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TurnStatus = (global::DominectClient.TurnStatus) input.ReadEnum();
            break;
          }
          case 98: {
            global::DominectClient.GameState subBuilder = new global::DominectClient.GameState();
            if (gameStateCase_ == GameStateOneofCase.DomGameState) {
              subBuilder.MergeFrom(DomGameState);
            }
            input.ReadMessage(subBuilder);
            DomGameState = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TurnStatus = (global::DominectClient.TurnStatus) input.ReadEnum();
            break;
          }
          case 98: {
            global::DominectClient.GameState subBuilder = new global::DominectClient.GameState();
            if (gameStateCase_ == GameStateOneofCase.DomGameState) {
              subBuilder.MergeFrom(DomGameState);
            }
            input.ReadMessage(subBuilder);
            DomGameState = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameStateResponse : pb::IMessage<GameStateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameStateResponse> _parser = new pb::MessageParser<GameStateResponse>(() => new GameStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStateResponse(GameStateResponse other) : this() {
      gameStatus_ = other.gameStatus_;
      beginningPlayer_ = other.beginningPlayer_;
      switch (other.GameStateCase) {
        case GameStateOneofCase.DomGameState:
          DomGameState = other.DomGameState.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStateResponse Clone() {
      return new GameStateResponse(this);
    }

    /// <summary>Field number for the "game_status" field.</summary>
    public const int GameStatusFieldNumber = 1;
    private global::DominectClient.GameStatus gameStatus_ = global::DominectClient.GameStatus.YourTurn;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.GameStatus GameStatus {
      get { return gameStatus_; }
      set {
        gameStatus_ = value;
      }
    }

    /// <summary>Field number for the "beginning_player" field.</summary>
    public const int BeginningPlayerFieldNumber = 2;
    private bool beginningPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BeginningPlayer {
      get { return beginningPlayer_; }
      set {
        beginningPlayer_ = value;
      }
    }

    /// <summary>Field number for the "dom_game_state" field.</summary>
    public const int DomGameStateFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DominectClient.GameState DomGameState {
      get { return gameStateCase_ == GameStateOneofCase.DomGameState ? (global::DominectClient.GameState) gameState_ : null; }
      set {
        gameState_ = value;
        gameStateCase_ = value == null ? GameStateOneofCase.None : GameStateOneofCase.DomGameState;
      }
    }

    private object gameState_;
    /// <summary>Enum of possible cases for the "game_state" oneof.</summary>
    public enum GameStateOneofCase {
      None = 0,
      DomGameState = 12,
    }
    private GameStateOneofCase gameStateCase_ = GameStateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStateOneofCase GameStateCase {
      get { return gameStateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameState() {
      gameStateCase_ = GameStateOneofCase.None;
      gameState_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameStatus != other.GameStatus) return false;
      if (BeginningPlayer != other.BeginningPlayer) return false;
      if (!object.Equals(DomGameState, other.DomGameState)) return false;
      if (GameStateCase != other.GameStateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameStatus != global::DominectClient.GameStatus.YourTurn) hash ^= GameStatus.GetHashCode();
      if (BeginningPlayer != false) hash ^= BeginningPlayer.GetHashCode();
      if (gameStateCase_ == GameStateOneofCase.DomGameState) hash ^= DomGameState.GetHashCode();
      hash ^= (int) gameStateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameStatus != global::DominectClient.GameStatus.YourTurn) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameStatus);
      }
      if (BeginningPlayer != false) {
        output.WriteRawTag(16);
        output.WriteBool(BeginningPlayer);
      }
      if (gameStateCase_ == GameStateOneofCase.DomGameState) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameStatus != global::DominectClient.GameStatus.YourTurn) {
        output.WriteRawTag(8);
        output.WriteEnum((int) GameStatus);
      }
      if (BeginningPlayer != false) {
        output.WriteRawTag(16);
        output.WriteBool(BeginningPlayer);
      }
      if (gameStateCase_ == GameStateOneofCase.DomGameState) {
        output.WriteRawTag(98);
        output.WriteMessage(DomGameState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameStatus != global::DominectClient.GameStatus.YourTurn) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameStatus);
      }
      if (BeginningPlayer != false) {
        size += 1 + 1;
      }
      if (gameStateCase_ == GameStateOneofCase.DomGameState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DomGameState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.GameStatus != global::DominectClient.GameStatus.YourTurn) {
        GameStatus = other.GameStatus;
      }
      if (other.BeginningPlayer != false) {
        BeginningPlayer = other.BeginningPlayer;
      }
      switch (other.GameStateCase) {
        case GameStateOneofCase.DomGameState:
          if (DomGameState == null) {
            DomGameState = new global::DominectClient.GameState();
          }
          DomGameState.MergeFrom(other.DomGameState);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameStatus = (global::DominectClient.GameStatus) input.ReadEnum();
            break;
          }
          case 16: {
            BeginningPlayer = input.ReadBool();
            break;
          }
          case 98: {
            global::DominectClient.GameState subBuilder = new global::DominectClient.GameState();
            if (gameStateCase_ == GameStateOneofCase.DomGameState) {
              subBuilder.MergeFrom(DomGameState);
            }
            input.ReadMessage(subBuilder);
            DomGameState = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameStatus = (global::DominectClient.GameStatus) input.ReadEnum();
            break;
          }
          case 16: {
            BeginningPlayer = input.ReadBool();
            break;
          }
          case 98: {
            global::DominectClient.GameState subBuilder = new global::DominectClient.GameState();
            if (gameStateCase_ == GameStateOneofCase.DomGameState) {
              subBuilder.MergeFrom(DomGameState);
            }
            input.ReadMessage(subBuilder);
            DomGameState = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpponentInfoResponse : pb::IMessage<OpponentInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpponentInfoResponse> _parser = new pb::MessageParser<OpponentInfoResponse>(() => new OpponentInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpponentInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpponentInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpponentInfoResponse(OpponentInfoResponse other) : this() {
      userPseudonym_ = other.userPseudonym_;
      groupPseudonym_ = other.groupPseudonym_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpponentInfoResponse Clone() {
      return new OpponentInfoResponse(this);
    }

    /// <summary>Field number for the "user_pseudonym" field.</summary>
    public const int UserPseudonymFieldNumber = 1;
    private string userPseudonym_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPseudonym {
      get { return userPseudonym_; }
      set {
        userPseudonym_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_pseudonym" field.</summary>
    public const int GroupPseudonymFieldNumber = 2;
    private string groupPseudonym_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupPseudonym {
      get { return groupPseudonym_; }
      set {
        groupPseudonym_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpponentInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpponentInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserPseudonym != other.UserPseudonym) return false;
      if (GroupPseudonym != other.GroupPseudonym) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserPseudonym.Length != 0) hash ^= UserPseudonym.GetHashCode();
      if (GroupPseudonym.Length != 0) hash ^= GroupPseudonym.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserPseudonym.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserPseudonym);
      }
      if (GroupPseudonym.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupPseudonym);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserPseudonym.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserPseudonym);
      }
      if (GroupPseudonym.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupPseudonym);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserPseudonym.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPseudonym);
      }
      if (GroupPseudonym.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupPseudonym);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpponentInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserPseudonym.Length != 0) {
        UserPseudonym = other.UserPseudonym;
      }
      if (other.GroupPseudonym.Length != 0) {
        GroupPseudonym = other.GroupPseudonym;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserPseudonym = input.ReadString();
            break;
          }
          case 18: {
            GroupPseudonym = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserPseudonym = input.ReadString();
            break;
          }
          case 18: {
            GroupPseudonym = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Nothing : pb::IMessage<Nothing>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Nothing> _parser = new pb::MessageParser<Nothing>(() => new Nothing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Nothing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DominectClient.NetcodeReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Nothing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Nothing(Nothing other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Nothing Clone() {
      return new Nothing(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Nothing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Nothing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Nothing other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
